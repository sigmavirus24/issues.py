[{"pull_request":{"diff_url":"https://github.com/kennethreitz/clint/pull/44.diff","patch_url":"https://github.com/kennethreitz/clint/pull/44.patch","html_url":"https://github.com/kennethreitz/clint/pull/44"},"updated_at":"2012-02-23T19:28:15Z","comments":0,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"mjs2600","avatar_url":"https://secure.gravatar.com/avatar/cd5f5a8fe4b090f59e83fdd8b88d5ffe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/mjs2600","gravatar_id":"cd5f5a8fe4b090f59e83fdd8b88d5ffe","id":434305},"title":"Fixed a typo in README.rst","html_url":"https://github.com/kennethreitz/clint/issues/44","url":"https://api.github.com/repos/kennethreitz/clint/issues/44","created_at":"2012-02-23T19:28:15Z","labels":[],"number":44,"id":3361542,"body":"Fixed a typo on line 73.\r\nThe command\r\n>>> puts('quoted text')\r\nshould output\r\n> quoted text\r\nnot\r\n> indented text"},{"pull_request":{"diff_url":"https://github.com/kennethreitz/clint/pull/42.diff","patch_url":"https://github.com/kennethreitz/clint/pull/42.patch","html_url":"https://github.com/kennethreitz/clint/pull/42"},"updated_at":"2012-02-23T10:10:12Z","comments":0,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"takluyver","avatar_url":"https://secure.gravatar.com/avatar/7f1ae3f14fd5b87c2c3f7b36014e185c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/takluyver","gravatar_id":"7f1ae3f14fd5b87c2c3f7b36014e185c","id":327925},"title":"Initialise colorama for textui on Windows.","html_url":"https://github.com/kennethreitz/clint/issues/42","url":"https://api.github.com/repos/kennethreitz/clint/issues/42","created_at":"2012-02-23T10:10:12Z","labels":[],"number":42,"id":3353754,"body":"This call is necessary for coloured text to work on Windows (see #39).\r\n\r\nI don't have my Windows system handy, so someone should test this.\r\n\r\n(Replacement for PR #41)"},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2012-02-21T19:15:22Z","comments":3,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"AltReality","avatar_url":"https://secure.gravatar.com/avatar/76089a11b6529ef076e2bd26c4c8fadd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/AltReality","gravatar_id":"76089a11b6529ef076e2bd26c4c8fadd","id":1433883},"title":"Windows colored text is not working","html_url":"https://github.com/kennethreitz/clint/issues/39","url":"https://api.github.com/repos/kennethreitz/clint/issues/39","created_at":"2012-02-13T16:26:07Z","labels":[],"number":39,"id":3204074,"body":"I have tried the all_colors.py example code on both Windows XP and Windows 7, using Python 3.2.2, and the output is surrounded by ANSI escape sequences, but it is not actually colored. It looks like the ANSI interpereter is not running in Windows. Someone else tested in Linux and it worked correctly."},{"pull_request":{"diff_url":"https://github.com/kennethreitz/clint/pull/38.diff","patch_url":"https://github.com/kennethreitz/clint/pull/38.patch","html_url":"https://github.com/kennethreitz/clint/pull/38"},"updated_at":"2012-02-12T23:12:25Z","comments":2,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"Lothiraldan","avatar_url":"https://secure.gravatar.com/avatar/410e3353165c33043ab69be7fc366428?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/Lothiraldan","gravatar_id":"410e3353165c33043ab69be7fc366428","id":243665},"title":"Try a reimplementation of clint.textui.core","html_url":"https://github.com/kennethreitz/clint/issues/38","url":"https://api.github.com/repos/kennethreitz/clint/issues/38","created_at":"2012-02-12T16:49:16Z","labels":[],"number":38,"id":3191601,"body":"I tried to reimplement clint.textui.core in a more simpler way.\r\n\r\nHere is my proposition, hope it helps."},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2012-02-07T14:23:17Z","comments":3,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"GMLudo","avatar_url":"https://secure.gravatar.com/avatar/3041a99ff2b84bc3dc10805020d35516?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/GMLudo","gravatar_id":"3041a99ff2b84bc3dc10805020d35516","id":243823},"title":"Show details during a progress","html_url":"https://github.com/kennethreitz/clint/issues/36","url":"https://api.github.com/repos/kennethreitz/clint/issues/36","created_at":"2012-02-06T17:27:42Z","labels":[],"number":36,"id":3111335,"body":"With the progress module, if you print information about the data in treatment, the progress bar is broken.\r\nExample:\r\n\r\n```python\r\nfor i in progress.bar(range(100)):\r\n    print(i)\r\n    sleep(random() * 0.2)\r\n```\r\nIt could be useful to add a method to print the current data processed, under the progress bar for example:\r\n\r\n```python\r\nfor i in progress.bar(range(100)):\r\n    progress.details(i)\r\n    sleep(random() * 0.2)\r\n```"},{"pull_request":{"diff_url":"https://github.com/kennethreitz/clint/pull/35.diff","patch_url":"https://github.com/kennethreitz/clint/pull/35.patch","html_url":"https://github.com/kennethreitz/clint/pull/35"},"updated_at":"2012-02-02T20:27:46Z","comments":0,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"hannosch","avatar_url":"https://secure.gravatar.com/avatar/442ad68d70ba0e030f167c6aca346975?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/hannosch","gravatar_id":"442ad68d70ba0e030f167c6aca346975","id":483109},"title":"Fix for #33 - unwanted installation of data files.","html_url":"https://github.com/kennethreitz/clint/issues/35","url":"https://api.github.com/repos/kennethreitz/clint/issues/35","created_at":"2012-02-02T20:27:46Z","labels":[],"number":35,"id":3073824,"body":"The readme and history files are part of the source dist thx to statements in the MANIFEST.in. This reverts `d6214ababb34f9fe5ae77fabb415ca87f0e3dd72` introduced in https://github.com/kennethreitz/clint/pull/22.\r\n\r\nWith this change:\r\n\r\n    $ git clone git://github.com/hannosch/clint.git\r\n    $ python2.6 setup.py sdist\r\n    ...\r\n    making hard links in clint-0.3.0...\r\n    hard linking AUTHORS -> clint-0.3.0\r\n    hard linking HISTORY.rst -> clint-0.3.0\r\n    hard linking LICENSE -> clint-0.3.0\r\n    hard linking NOTICE -> clint-0.3.0\r\n    hard linking README.rst -> clint-0.3.0\r\n    ...\r\n    $ tar tf dist/clint-0.3.0.tar.gz\r\n    clint-0.3.0/\r\n    clint-0.3.0/AUTHORS\r\n    clint-0.3.0/clint/\r\n    clint-0.3.0/HISTORY.rst\r\n    clint-0.3.0/LICENSE\r\n    clint-0.3.0/NOTICE\r\n    clint-0.3.0/PKG-INFO\r\n    clint-0.3.0/README.rst\r\n    clint-0.3.0/setup.py\r\n    ...\r\n\r\nSo the files are definitely in the source distribution. I don't see any reason why they should be installed into site-packages."},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2012-01-27T12:49:16Z","comments":1,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"hannosch","avatar_url":"https://secure.gravatar.com/avatar/442ad68d70ba0e030f167c6aca346975?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/hannosch","gravatar_id":"442ad68d70ba0e030f167c6aca346975","id":483109},"title":"data files installed in the wrong location","html_url":"https://github.com/kennethreitz/clint/issues/33","url":"https://api.github.com/repos/kennethreitz/clint/issues/33","created_at":"2012-01-26T16:08:12Z","labels":[],"number":33,"id":2981565,"body":"The fix for issue 22 introduced a new problem. The data files are now installed in the top folder of the environment.\r\n\r\nTo reproduce do:\r\n\r\n    $ virtualenv-2.6 --distribute venv\r\n    New python executable in venv/bin/python2.6\r\n    ...\r\n    $ cd venv/\r\n    $ bin/pip install clint\r\n    Downloading/unpacking clint\r\n      Running setup.py egg_info for package clint\r\n    Installing collected packages: clint\r\n      Running setup.py install for clint\r\n        warning: install_data: setup script did not provide a directory for 'README.rst' -- installing right in '/opt/tmp/venv'\r\n        warning: install_data: setup script did not provide a directory for 'HISTORY.rst' -- installing right in '/opt/tmp/venv'\r\n    Successfully installed clint\r\n    Cleaning up...\r\n    $ ls\r\n    HISTORY.rst\tREADME.rst\tbin\t\tinclude\t\tlib\r\n\r\ndistutils even warns about this. In my case my own readme/history files are overwritten by this.\r\n\r\nI think to solve the issue you had, you just want to use a MANIFEST.in which will tell distutils to include the files in the sdist. There's no need to actually install them on the target system. If you want to install them as well, I'd use setuptools/distribute include_package_data option (http://packages.python.org/distribute/setuptools.html#including-data-files)."},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2012-01-13T23:37:51Z","comments":2,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"jandd","avatar_url":"https://secure.gravatar.com/avatar/4ce24d7ab69a350a8bacb5460a3e5551?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/jandd","gravatar_id":"4ce24d7ab69a350a8bacb5460a3e5551","id":249001},"title":"clint breaks readline completion","html_url":"https://github.com/kennethreitz/clint/issues/28","url":"https://api.github.com/repos/kennethreitz/clint/issues/28","created_at":"2012-01-13T23:18:32Z","labels":[],"number":28,"id":2837885,"body":"importing clint breaks readline completion for raw_input. The following small example illustrates that behaviour:\r\n\r\n```python\r\n\r\n#!/usr/bin/env python\r\n\r\n#from clint import resources\r\nimport readline\r\n\r\n\r\ndef complete(text, state):\r\n    if text[state].startswith('h'):\r\n        return 'hello'\r\n    return None\r\n\r\nreadline.parse_and_bind('tab: complete')\r\nreadline.set_completer(complete)\r\n\r\nprint raw_input('Tell me something: ')\r\n```\r\n\r\nif the clint import is uncommented the tab completion stops working."},{"pull_request":{"diff_url":"https://github.com/kennethreitz/clint/pull/25.diff","patch_url":"https://github.com/kennethreitz/clint/pull/25.patch","html_url":"https://github.com/kennethreitz/clint/pull/25"},"updated_at":"2012-01-09T21:45:42Z","comments":0,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"SirScott","avatar_url":"https://secure.gravatar.com/avatar/3a362ece4cea7ef3841978e291142ae0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/SirScott","gravatar_id":"3a362ece4cea7ef3841978e291142ae0","id":709273},"title":"Make the width argument take into account the entire BAR_TEMPLATE, not j...","html_url":"https://github.com/kennethreitz/clint/issues/25","url":"https://api.github.com/repos/kennethreitz/clint/issues/25","created_at":"2012-01-09T21:45:42Z","labels":[],"number":25,"id":2775927,"body":"...ust the FILLED / EMPTY chars.\r\n\r\nNow it's easy for the bar to fill the width of the console:\r\n\r\n>>> import os\r\n>>> console_width = int(os.popen('stty size', 'r').read().split()[1])\r\n>>> for i in progress.bar(range(100), width=console_width):\r\n>>>    sleep(random() * 0.2)"},{"pull_request":{"diff_url":"https://github.com/kennethreitz/clint/pull/23.diff","patch_url":"https://github.com/kennethreitz/clint/pull/23.patch","html_url":"https://github.com/kennethreitz/clint/pull/23"},"updated_at":"2012-01-07T06:56:52Z","comments":0,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"jjanyan","avatar_url":"https://secure.gravatar.com/avatar/504ad04e57fbce1a838f0ccd3a204bc2?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/jjanyan","gravatar_id":"504ad04e57fbce1a838f0ccd3a204bc2","id":152400},"title":"added colors to progress bar and progress dots","html_url":"https://github.com/kennethreitz/clint/issues/23","url":"https://api.github.com/repos/kennethreitz/clint/issues/23","created_at":"2012-01-07T06:56:52Z","labels":[],"number":23,"id":2755185,"body":"added colors to the progress bar and dots. it supports colors for the fill, empty, dots, and labels. "},{"pull_request":{"diff_url":"https://github.com/kennethreitz/clint/pull/19.diff","patch_url":"https://github.com/kennethreitz/clint/pull/19.patch","html_url":"https://github.com/kennethreitz/clint/pull/19"},"updated_at":"2012-01-05T22:26:50Z","comments":1,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"hunterlang","avatar_url":"https://secure.gravatar.com/avatar/621f84254b6614f2939784edb268d276?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/hunterlang","gravatar_id":"621f84254b6614f2939784edb268d276","id":680821},"title":"added simple user input system","html_url":"https://github.com/kennethreitz/clint/issues/19","url":"https://api.github.com/repos/kennethreitz/clint/issues/19","created_at":"2011-09-27T21:18:43Z","labels":[],"number":19,"id":1756570,"body":"added a system for user input. There is a standard y/n function, and a way to implement more complex input functionality."},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2011-08-05T17:56:41Z","comments":1,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"kennethreitz","avatar_url":"https://secure.gravatar.com/avatar/2eccc4005572c1e2b12a9c00580bc86f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/kennethreitz","gravatar_id":"2eccc4005572c1e2b12a9c00580bc86f","id":119893},"title":"Underline Color Support","html_url":"https://github.com/kennethreitz/clint/issues/17","url":"https://api.github.com/repos/kennethreitz/clint/issues/17","created_at":"2011-06-23T05:20:50Z","labels":[],"number":17,"id":1102461,"body":""},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2012-01-09T12:28:33Z","comments":1,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"kennethreitz","avatar_url":"https://secure.gravatar.com/avatar/2eccc4005572c1e2b12a9c00580bc86f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/kennethreitz","gravatar_id":"2eccc4005572c1e2b12a9c00580bc86f","id":119893},"title":"Background Color Support","html_url":"https://github.com/kennethreitz/clint/issues/16","url":"https://api.github.com/repos/kennethreitz/clint/issues/16","created_at":"2011-06-23T05:20:40Z","labels":[],"number":16,"id":1102460,"body":""},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2011-06-23T05:19:34Z","comments":0,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"kennethreitz","avatar_url":"https://secure.gravatar.com/avatar/2eccc4005572c1e2b12a9c00580bc86f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/kennethreitz","gravatar_id":"2eccc4005572c1e2b12a9c00580bc86f","id":119893},"title":"Documentation","html_url":"https://github.com/kennethreitz/clint/issues/15","url":"https://api.github.com/repos/kennethreitz/clint/issues/15","created_at":"2011-06-23T05:19:34Z","labels":[],"number":15,"id":1102459,"body":""},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2011-06-06T18:03:38Z","comments":1,"assignee":{"login":"kennethreitz","avatar_url":"https://secure.gravatar.com/avatar/2eccc4005572c1e2b12a9c00580bc86f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/kennethreitz","gravatar_id":"2eccc4005572c1e2b12a9c00580bc86f","id":119893},"state":"open","milestone":{"open_issues":2,"closed_issues":0,"state":"open","creator":{"login":"kennethreitz","avatar_url":"https://secure.gravatar.com/avatar/2eccc4005572c1e2b12a9c00580bc86f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/kennethreitz","gravatar_id":"2eccc4005572c1e2b12a9c00580bc86f","id":119893},"title":"v0.2.4","url":"https://api.github.com/repos/kennethreitz/clint/milestones/3","created_at":"2011-04-10T00:57:32Z","due_on":"2011-04-11T07:00:00Z","number":3,"description":""},"closed_at":null,"user":{"login":"kennethreitz","avatar_url":"https://secure.gravatar.com/avatar/2eccc4005572c1e2b12a9c00580bc86f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/kennethreitz","gravatar_id":"2eccc4005572c1e2b12a9c00580bc86f","id":119893},"title":"textui.auto_columns","html_url":"https://github.com/kennethreitz/clint/issues/13","url":"https://api.github.com/repos/kennethreitz/clint/issues/13","created_at":"2011-06-06T17:59:19Z","labels":[],"number":13,"id":1010681,"body":"```pycon\r\n>>> auto_columns(list_of_strings)\r\n# prints strings in appropriate columns, like `ls`\r\n\r\n>>> auto_columns(list_of_strings, 10)\r\n# prints strings in columns with a width of 10\r\n"},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2012-01-07T03:59:03Z","comments":2,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"kennethreitz","avatar_url":"https://secure.gravatar.com/avatar/2eccc4005572c1e2b12a9c00580bc86f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/kennethreitz","gravatar_id":"2eccc4005572c1e2b12a9c00580bc86f","id":119893},"title":"wrap stdout.isatty in try/except","html_url":"https://github.com/kennethreitz/clint/issues/11","url":"https://api.github.com/repos/kennethreitz/clint/issues/11","created_at":"2011-04-08T15:14:27Z","labels":[],"number":11,"id":745586,"body":"Check for `AttributeError`. BPython hacks stdout and doesn't have that method available."},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2011-04-08T12:09:34Z","comments":0,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"kennethreitz","avatar_url":"https://secure.gravatar.com/avatar/2eccc4005572c1e2b12a9c00580bc86f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/kennethreitz","gravatar_id":"2eccc4005572c1e2b12a9c00580bc86f","id":119893},"title":"Add underline support","html_url":"https://github.com/kennethreitz/clint/issues/10","url":"https://api.github.com/repos/kennethreitz/clint/issues/10","created_at":"2011-04-08T12:09:34Z","labels":[{"color":"DDDDDD","url":"https://api.github.com/repos/kennethreitz/clint/labels/Feature+Request","name":"Feature Request"}],"number":10,"id":745052,"body":""},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2011-04-20T00:56:05Z","comments":1,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"redtoad","avatar_url":"https://secure.gravatar.com/avatar/0ea0b53aba2fd846b01e95649a42ec72?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/redtoad","gravatar_id":"0ea0b53aba2fd846b01e95649a42ec72","id":241791},"title":"examples/text_width.py only works with terminals wider than 135 chars","html_url":"https://github.com/kennethreitz/clint/issues/8","url":"https://api.github.com/repos/kennethreitz/clint/issues/8","created_at":"2011-04-04T12:40:03Z","labels":[],"number":8,"id":730426,"body":"When running examples/text_width.py inside terminals with 135 or less characters in width, the following error pops up:\r\n\r\n    Traceback (most recent call last):\r\n      File \"text_width.py\", line 22, in <module>\r\n        puts(columns([(colored.red('Column 1')), col], [(colored.green('Column Two')), None], [(colored.magenta('Column III')), col]))\r\n      File \"/tmp/clint/clint/textui/cols.py\", line 95, in columns\r\n        cols[_big_col][0] = max_width(cols[_big_col][0], cols[_big_col][1]).split('\\n')\r\n      File \"/tmp/clint/clint/textui/formatters.py\", line 70, in max_width\r\n        chunks = schunk(word, (cols + offset))\r\n      File \"/tmp/clint/clint/utils.py\", line 61, in schunk\r\n        for char in string:\r\n    TypeError: 'ColoredString' object is not iterable\r\n"},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2012-02-17T11:56:23Z","comments":23,"assignee":null,"state":"open","milestone":{"open_issues":2,"closed_issues":0,"state":"open","creator":{"login":"kennethreitz","avatar_url":"https://secure.gravatar.com/avatar/2eccc4005572c1e2b12a9c00580bc86f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/kennethreitz","gravatar_id":"2eccc4005572c1e2b12a9c00580bc86f","id":119893},"title":"v0.2.4","url":"https://api.github.com/repos/kennethreitz/clint/milestones/3","created_at":"2011-04-10T00:57:32Z","due_on":"2011-04-11T07:00:00Z","number":3,"description":""},"closed_at":null,"user":{"login":"laanwj","avatar_url":"https://secure.gravatar.com/avatar/9598ae319be753b20f97f21ed10ca7ed?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/laanwj","gravatar_id":"9598ae319be753b20f97f21ed10ca7ed","id":126646},"title":"256-color terminal support","html_url":"https://github.com/kennethreitz/clint/issues/4","url":"https://api.github.com/repos/kennethreitz/clint/issues/4","created_at":"2011-03-31T10:03:14Z","labels":[{"color":"DDDDDD","url":"https://api.github.com/repos/kennethreitz/clint/labels/Feature+Request","name":"Feature Request"}],"number":4,"id":720590,"body":"Very nice project, I've been pondering abut something like this for a while, and existing Python console support projects seem to have died a quiet death.\r\n\r\nA small feature request: Most terminals these days support 256 color (gnome, konsole, even old xterm/mrxvt). It'd be awesome if you could use these colors in Clint (for example, by setting colors as RGB and choosing the closest color). We're now in 2011 and 8-color text is old-fashioned :)\r\n\r\nI might get around to implementing this myself and submitting a patch. I have code for this in one of my other projects. (As for lists of R/G/B values,  and/or color names, IPython could be an inspiration as it has a module for it)\r\n\r\n\r\n"},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2011-03-22T01:13:04Z","comments":0,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"kennethreitz","avatar_url":"https://secure.gravatar.com/avatar/2eccc4005572c1e2b12a9c00580bc86f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/kennethreitz","gravatar_id":"2eccc4005572c1e2b12a9c00580bc86f","id":119893},"title":"clint.resources.bundler","html_url":"https://github.com/kennethreitz/clint/issues/3","url":"https://api.github.com/repos/kennethreitz/clint/issues/3","created_at":"2011-03-22T01:13:04Z","labels":[{"color":"DDDDDD","url":"https://api.github.com/repos/kennethreitz/clint/labels/Feature+Request","name":"Feature Request"}],"number":3,"id":692669,"body":"Possibly add bundler functionality that would allow you to serialize/deserialize an chunk of application data for freezing."},{"pull_request":{"diff_url":null,"patch_url":null,"html_url":null},"updated_at":"2011-03-31T15:25:09Z","comments":1,"assignee":null,"state":"open","milestone":null,"closed_at":null,"user":{"login":"kennethreitz","avatar_url":"https://secure.gravatar.com/avatar/2eccc4005572c1e2b12a9c00580bc86f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/kennethreitz","gravatar_id":"2eccc4005572c1e2b12a9c00580bc86f","id":119893},"title":"clint.textui.maxwidth context manager","html_url":"https://github.com/kennethreitz/clint/issues/2","url":"https://api.github.com/repos/kennethreitz/clint/issues/2","created_at":"2011-03-22T01:11:42Z","labels":[{"color":"DDDDDD","url":"https://api.github.com/repos/kennethreitz/clint/labels/Feature+Request","name":"Feature Request"}],"number":2,"id":692666,"body":"    from clint.textui import maxwidth, puts\r\n\r\n    with maxwidth(80):\r\n        puts('something extremely long')\r\n\r\nCould be tricky to impliment w/ indents."}]